name: Dependency Vulnerability Audit

on:
  workflow_call:
    inputs:
      package-location:
        type: string
        description: "Location of the package.json file"
        required: false
        default: "."

jobs:
  dependency_vulnerability_audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log current directory
        run: |
          echo "Current directory: $(pwd)"
        working-directory: ${{ inputs.package-location }}

      - name: Check if yarn.lock exists
        run: |
          if [ -f yarn.lock ]; then
            echo "yarn.lock found."
          else
            echo "yarn.lock not found!"
          fi
        working-directory: ${{ inputs.package-location }}

      - name: Run yarn audit
        continue-on-error: true
        run: |
          yarn audit --json > audit-results.json
          cat audit-results.json
        working-directory: ${{ inputs.package-location }}

      - name: Audit check
        run: |
          vulnerabilities=$(cat audit-results.json | jq -r '.data.vulnerabilities | select(.high > 0 or .moderate > 0 or .low > 0 or .critical > 0)')

          if [ -z "$vulnerabilities" ]; then
            echo "No open vulnerabilities found. Continuing..."
            exit 0
          fi

          cat audit-results.json | jq -r 'select(.data.advisory.patched_versions != null and .data.advisory.patched_versions != "")' > fixable_issues.json

          if [ -s fixable_issues.json ]; then
            echo "Error: Vulnerabilities with fixes available found!"
            cat fixable_issues.json
            exit 1  # Exit with error if fixable vulnerabilities are found
          else
            echo "No fixable vulnerabilities found. Continuing..."
          fi

          cat audit-results.json | jq -r 'select((.data.advisory.patched_versions == null or .data.advisory.patched_versions == ""))' > no_fix_issues.json

          if [ -s no_fix_issues.json ]; then
            echo "Warning: High severity vulnerabilities with no fixes found:"
            cat no_fix_issues.json
          fi
        working-directory: ${{ inputs.package-location }}

      - name: Cleanup generated files
        run: |
          rm -f audit-results.json fixable_issues.json no_fix_issues.json
        working-directory: ${{ inputs.package-location }}
