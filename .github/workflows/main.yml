name: Deploy package to GitHub package registry

on:
  push:
    branches: [prd, tst, next]

permissions:
  id-token: write
  contents: write

jobs:
  dependency_vulnerability_audit:
    uses: PayConstruct/github-actions-workflows/.github/workflows/dependency-vulnerability-audit.yml@main
  release:
    needs: [dependency_vulnerability_audit]
    uses: PayConstruct/github-actions-workflows/.github/workflows/release-npm-registry-package.yml@main
    with:
      branch_name: ${{ github.ref_name }}
    secrets:
      deploy_token: ${{ secrets.DEPLOY_TOKEN }}
      org_npmrc: ${{ secrets.ORG_NPMRC }}
      base_url_tst: ${{ secrets.BASE_URL_TST }}
      base_url: ${{ secrets.BASE_URL }}

  # release:
  #   needs: [dependency_vulnerability_audit]
  #   runs-on: ubuntu-latest
  #   if: ${{ !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')}}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         repository: ${{ github.repository }}
  #         token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Use Node.js 18.x
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 18.x
  #         registry-url: 'https://npm.pkg.github.com'
  #         scope: '@payperform'

  #     - name: Install dependencies
  #       run: yarn install --frozen-lockfile

  #     - name: Cache node modules
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: yarn-deps-${{ hashFiles('yarn.lock') }}
  #         restore-keys: |
  #           yarn-deps-${{ hashFiles('yarn.lock') }}

  #     # - name: prettier
  #     #   run: yarn prettier

  #     # - name: Determine Role to use
  #     #   id: checkroles
  #     #   shell: bash
  #     #   run: |
  #     #     if [ "${{ github.ref_name }}" == "tst" ]; then
  #     #       echo role-to-use=$TST_IAM_ROLE >> $GITHUB_OUTPUT
  #     #     elif [ "${{ github.ref_name }}" == "prd" ]; then
  #     #       echo role-to-use=$PRD_IAM_ROLE >> $GITHUB_OUTPUT
  #     #     else
  #     #       echo role-to-use=$DEV_IAM_ROLE >> $GITHUB_OUTPUT
  #     #     fi
  #     #   env:
  #     #     DEV_IAM_ROLE: ${{ secrets.DEV_IAM_ROLE_PM }}
  #     #     TST_IAM_ROLE: ${{ secrets.TST_IAM_ROLE_PM }}
  #     #     PRD_IAM_ROLE: ${{ secrets.PRD_IAM_ROLE_PM }}

  #     # - name: Configure AWS Credentials
  #     #   uses: aws-actions/configure-aws-credentials@v1
  #     #   with:
  #     #     aws-region: ap-southeast-1
  #     #     role-to-assume: ${{ steps.checkroles.outputs.role-to-use }}
  #     #     role-session-name: OIDCSession

  #     - name: Use .npmrc
  #       uses: bduff9/use-npmrc@v1.2
  #       with:
  #         dot-npmrc: ${{ secrets.ORG_NPMRC }}

  #     - name: Set Git Identity
  #       run: |
  #         git config --global user.name "github-actions[bot]"
  #         git config --global user.email "github-actions[bot]@users.noreply.github.com"

  #     - name: Set base url
  #       id: setBaseUrl
  #       run: |
  #         if [[ "${{ github.ref_name }}" == "tst" ]]; then
  #           echo base-url=$BASE_URL_TST >> $GITHUB_OUTPUT
  #         else
  #           echo base-url=$BASE_URL >> $GITHUB_OUTPUT
  #         fi
  #       env:
  #         BASE_URL_TST: ${{ secrets.BASE_URL_TST }}
  #         BASE_URL: ${{ secrets.BASE_URL }}

  #     # - name: Run tests
  #     #   run: yarn test:coverage

  #     - name: Build project
  #       env:
  #         BASE_URL: ${{ steps.setBaseUrl.outputs.base-url }}
  #       run: |
  #         yarn build

  #     # - name: Update CDN
  #     #   run: |
  #     #     yarn upload

  #     - name: Update version and publish
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
  #         NODE_AUTH_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
  #       run: |
  #         BRANCH_NAME="${GITHUB_REF#refs/heads/}"
  #         if [ "$BRANCH_NAME" == "tst" ]; then
  #           yarn auto canary --force
  #         else
  #           yarn auto shipit --base-branch=prd
  #         fi
