name: Deploy package to GitHub package registry

on:
  push:
    branches:
      - main
      - dev
      - next

permissions:
  id-token: write
  contents: write

jobs:
  dependency_vulnerability_audit:
    uses: PayConstruct/github-actions-workflows/.github/workflows/dependency-vulnerability-audit.yml@main
    secrets:
      GH_PAT: ${{ secrets.GH_PAT_TOKEN }}
          

  release:
    needs: [dependency_vulnerability_audit]
    uses: PayConstruct/github-actions-workflows/.github/workflows/release-npm-registry-package.yml@main
    with:
      branch_name: ${{ github.ref_name }}
    secrets:
      deploy_token: ${{ secrets.DEPLOY_TOKEN }}
      org_npmrc: ${{ secrets.ORG_NPMRC }}
      base_url_tst: ${{ secrets.BASE_URL_TST }}
      base_url: ${{ secrets.BASE_URL }}
      github_token: ${{ secrets.GH_PAT }}

  upload_to_s3:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: 'https://npm.pkg.github.com'
          scope: '@payperform'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: yarn-deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-deps-${{ hashFiles('yarn.lock') }}

      - name: Determine Role to use
        id: checkroles
        shell: bash
        run: |
          if [ "${{ github.ref_name }}" == "dev" ]; then
            echo role-to-use=$TST_IAM_ROLE >> $GITHUB_OUTPUT
          elif [ "${{ github.ref_name }}" == "main" ]; then
            echo role-to-use=$PRD_IAM_ROLE >> $GITHUB_OUTPUT
          else
            echo role-to-use=$DEV_IAM_ROLE >> $GITHUB_OUTPUT
          fi
        env:
          DEV_IAM_ROLE: ${{ secrets.DEV_IAM_ROLE_PM }}
          TST_IAM_ROLE: ${{ secrets.TST_IAM_ROLE_PM }}
          PRD_IAM_ROLE: ${{ secrets.PRD_IAM_ROLE_PM }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          role-to-assume: ${{ steps.checkroles.outputs.role-to-use }}
          role-session-name: OIDCSession

      - name: Use .npmrc
        uses: bduff9/use-npmrc@v1.2
        with:
          dot-npmrc: ${{ secrets.ORG_NPMRC }}

      - name: Set base URL and bucket name using secrets
        id: setBaseUrl
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo base-url=$BASE_URL_TST >> $GITHUB_OUTPUT
            echo bucket-name=${{ secrets.BUCKET_NAME_TST }} >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            echo base-url=$BASE_URL >> $GITHUB_OUTPUT
            echo bucket-name=${{ secrets.BUCKET_NAME_PRD }} >> $GITHUB_OUTPUT
          else
            echo base-url=$BASE_URL_TST >> $GITHUB_OUTPUT
            echo bucket-name=${{ secrets.BUCKET_NAME_TST }} >> $GITHUB_OUTPUT
          fi
        env:
          BASE_URL: ${{ steps.setBaseUrl.outputs.base-url }}

      - name: Install Dependencies and Build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Update CDN
        run: |
          file="dist/index.umd.min.js"
          if [[ ! -f "$file" ]]; then
            echo "Error: $file does not exist."
            exit 1
          fi
          aws s3 cp "$file" "s3://${{ steps.setBaseUrl.outputs.bucket-name }}/index.js" --acl public-read
